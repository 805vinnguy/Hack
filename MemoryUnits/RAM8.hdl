// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way (in = true, sel = address, a = reg0, b = reg1, c = reg2, d = reg3, e = reg4, f = reg5, g = reg6, h = reg7);
    And (a = load, b = reg0, out = ld0);
    And (a = load, b = reg1, out = ld1);
    And (a = load, b = reg2, out = ld2);
    And (a = load, b = reg3, out = ld3);
    And (a = load, b = reg4, out = ld4);
    And (a = load, b = reg5, out = ld5);
    And (a = load, b = reg6, out = ld6);
    And (a = load, b = reg7, out = ld7);
    Register (in = in, load = ld0, out = regout0);    
    Register (in = in, load = ld1, out = regout1);
    Register (in = in, load = ld2, out = regout2);
    Register (in = in, load = ld3, out = regout3);
    Register (in = in, load = ld4, out = regout4);
    Register (in = in, load = ld5, out = regout5);
    Register (in = in, load = ld6, out = regout6);
    Register (in = in, load = ld7, out = regout7);
    Mux8Way16 (a = regout0, b = regout1, c = regout2, d = regout3, e = regout4, f = regout5, g = regout6, h = regout7, sel = address, out = out);
}